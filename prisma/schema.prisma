// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = "file:dev.sqlite"
}

model Session {
  id             String   @id
  shop           String
  state          String
  isOnline       Boolean
  scope          String   // Add this line
  expires        DateTime?
  accessToken    String
  userId         Int?     // Change to Int if Shop.id is Int
  user      Shop?    @relation(fields: [userId], references: [id])
}

model Shop {
  id             Int       @id @default(autoincrement())
  username       String    @unique
  shopifyName    String
  shopifyUrl     String
  isActive       Boolean   @default(false)
  daysActive     Int       @default(0)
  installedAt    DateTime  @default(now())
  uninstalledAt  DateTime?
  carriers       CarrierConfig[] @relation("ShopCarriers")
  sessions       Session[]
  locations      Location[] @relation("ShopLocations")
  // Move these fields from Session to Shop
  accessToken  String?
  scope        String?
  firstName    String?
  lastName     String?
  email        String?
  accountOwner Boolean   @default(false)
  locale       String?
  collaborator Boolean?  @default(false)
  emailVerified Boolean? @default(false)
}

model Carrier {
  id             Int       @id @default(autoincrement())
  name           String    @unique
  shopConfigs    CarrierConfig[] @relation("CarrierConfigs")
  shippingMethods ShippingMethod[] @relation("CarrierShippingMethods")
}

model CarrierConfig {
  id             Int       @id @default(autoincrement())
  shop           Shop      @relation("ShopCarriers", fields: [shopId], references: [id])
  shopId         Int
  carrier        Carrier   @relation("CarrierConfigs", fields: [carrierId], references: [id])
  carrierId      Int
  isActive       Boolean   @default(false)
  apiKey         String?
  memberNumber   String?
  shippingMethodConfigs ShippingMethodConfig[] @relation("CarrierConfigShippingMethods")

  @@unique([shopId, carrierId])
}

model ShippingMethod {
  id             Int       @id @default(autoincrement())
  carrier        Carrier   @relation("CarrierShippingMethods", fields: [carrierId], references: [id])
  carrierId      Int
  name           String
  configs        ShippingMethodConfig[] @relation("ShippingMethodConfigs")
}

model ShippingMethodConfig {
  id             Int       @id @default(autoincrement())
  carrierConfig  CarrierConfig @relation("CarrierConfigShippingMethods", fields: [carrierConfigId], references: [id])
  carrierConfigId Int
  shippingMethod ShippingMethod @relation("ShippingMethodConfigs", fields: [shippingMethodId], references: [id])
  shippingMethodId Int
  isActive       Boolean   @default(true)
  customName     String?
  additionalFlatRate Decimal?
  additionalPercentage Decimal?

  @@unique([carrierConfigId, shippingMethodId])
}

model Location {
  id             Int       @id @default(autoincrement())
  shop           Shop      @relation("ShopLocations", fields: [shopId], references: [id])
  shopId         Int
  name           String
  address1       String
  address2       String?
  city           String
  province       String
  country        String
  zip            String
  phone          String?
  shopifyLocationId String @unique
}
