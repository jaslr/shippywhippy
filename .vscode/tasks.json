{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Kill PostgreSQL",
            "type": "shell",
            "command": "sudo kill $(sudo lsof -t -i:5432) || true",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "Start PostgreSQL",
            "type": "shell",
            "command": "sudo pg_ctlcluster 14 main start",
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": []
        },
        {
            "label": "ðŸš€ Full Development Setup",
            "dependsOn": [
                "Kill existing processes",
                "Kill PostgreSQL",
                "Start PostgreSQL",
                "Run Prisma Studio",
                "Run compodoc",
                "Generate Site Structure",
                "Run npm dev"
            ],
            "dependsOrder": "sequence",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new",
                "showReuseMessage": false,
                "clear": true
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Generate Site Structure",
            "type": "shell",
            "command": "bash",
            "args": ["./tasks/generate_site_structure.sh"],
            "presentation": {
                "reveal": "always",
                "panel": "new"
            }
        },
        {
            "label": "Kill existing processes",
            "type": "shell",
            "command": "${workspaceFolder}/scripts/kill_processes.sh",
            "presentation": {
                "reveal": "always",
                "panel": "new",
                "close": true
            },
            "problemMatcher": []
        },
        {
            "label": "Run npm dev",
            "type": "shell",
            "command": "npm",
            "args": ["run", "dev"],
            "isBackground": true,
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": [
                {
                    "pattern": [
                        {
                            "regexp": ".",
                            "file": 1,
                            "location": 2,
                            "message": 3
                        }
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": "^.*",
                        "endsPattern": "^.*"
                    }
                }
            ]
        },
        {
            "label": "Run compodoc",
            "type": "shell",
            "command": "npm",
            "args": ["run", "compodoc"],
            "isBackground": true,
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": [
                {
                    "pattern": [
                        {
                            "regexp": ".",
                            "file": 1,
                            "location": 2,
                            "message": 3
                        }
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": "^.*",
                        "endsPattern": "^.*"
                    }
                }
            ]
        },
        {
            "label": "Run Prisma Studio",
            "type": "shell",
            "command": "npx",
            "args": ["prisma", "studio"],
            "isBackground": true,
            "presentation": {
                "reveal": "always",
                "panel": "new"
            },
            "problemMatcher": [
                {
                    "pattern": [
                        {
                            "regexp": ".",
                            "file": 1,
                            "location": 2,
                            "message": 3
                        }
                    ],
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": "^.*",
                        "endsPattern": "^.*"
                    }
                }
            ]
        }
    ]
}